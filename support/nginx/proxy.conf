upstream musicsvc {
	server musicservice:2599;
}

upstream usersvc {
	server userservice:2600;
}

upstream categorysvc {
	server categoryservice:2601;
}

upstream postssvc {
	server postsservice:2602;
}

upstream logsvc {
	server logservice:2603;
}

upstream menusvc {
	server menuservice:2604;
}

upstream configsvc {
	server configservice:2605;
}

upstream linkssvc {
	server linksservice:2606;
}

upstream filesvc {
	server fileservice:2607;
}


server {
	listen       9000;
	server_name  closetool.top;

	client_body_buffer_size 32m;
	client_max_body_size 32m;
	proxy_buffering on;           # 启用响应数据缓冲区
	proxy_buffers 8 8m;           # 设置每个HTTP请求读取上游服务器响应数据缓冲区的大小为64KB
	proxy_buffer_size 8m;         # 设置每个HTTP请求读取响应数据第一部分缓冲区的大小为8KB
	proxy_busy_buffers_size 16m;  # 接收上游服务器返回响应数据时，同时用于向客户端发送响应的缓
								# 冲区的大小为16KB
	proxy_limit_rate 0;           # 不限制每个HTTP请求每秒读取上游服务器响应数据的流量
	proxy_request_buffering on;   # 启用客户端HTTP请求读取缓冲区功能
	proxy_http_version 1.1;       # 使用HTTP 1.1版本协议与上游服务器建立通信
	proxy_connect_timeout 5s;     # 设置与上游服务器建立连接的超时时间为5s
	proxy_intercept_errors on;    # 拦截上游服务器中响应码大于300的响应处理
	proxy_read_timeout 60s;       # 从上游服务器获取响应数据的间隔超时时间为60s
	proxy_send_timeout 60s;    # 向上游服务器发送请求的间隔超时时间为60s
	proxy_redirect off;
	proxy_pass_request_body on;

	#charset koi8-r;
	access_log  /var/log/nginx/host.access.log  main;

	location ~ ^/api/blog/auth/(.*) {
		proxy_pass http://usersvc/auth/$1?$args;
	}

	location ~ ^/api/blog/music/(.*) {
		proxy_pass http://musicsvc/music/$1?$args;
	}

	location ~ ^/api/blog/(category|tags)/(.*) {
		proxy_pass http://categorysvc/$1/$2?$args;
	}

	location ~ ^/api/blog/(posts|archive|comments)/(.*) {
		proxy_pass http://postssvc/$1/$2?$args;
	}

	location ~ ^/api/blog/logs/(.*) {
		proxy_pass http://logsvc/logs/$1?$args;
	}

	location ~ ^/api/blog/menu/(.*) {
		proxy_pass http://menusvc/menu/$1?$args;
	}

	location ~ ^/api/blog/config/(.*) {
		proxy_pass http://configsvc/config/$1?$args;
	}

	location ~ ^/api/blog/link/(.*) {
		proxy_pass http://linkssvc/link/$1?$args;
	}

	location ~ ^/api/blog/file/(.*) {
		proxy_pass http://filesvc/file/$1;
	}

	location ~ ^/api/blog/files/(.*) {
		proxy_pass http://filesvc/files/$1;
	}

	location /status {  
		stub_status on;   	
		access_log off;
		#auth_basic "status";   	
		#auth_basic_user_file conf/htpasswd;#用来指定密码文件的位置。
	}
}
